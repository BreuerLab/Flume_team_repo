%implements s6_b0_1wpak_Outputs "C"

%function Outputs(block, system) Output
%<SLibCGIRAccessLocalVar(0, 0, "")> %% rtb_CounterInput
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T rtb_AnalogInput[7];
real_T rtb_datapoints;
int32_T i;
int32_T i_0;
%closefile localVarDecl
%assign _modelSS = ""

%assign tlcOutputsFcnOfS4B0 = OpaqueTLCBlockFcn("Outputs", 4, 0, 2, 2, 0)
%assign tlcOutputsFcnOfS4B1 = OpaqueTLCBlockFcn("Outputs", 4, 1, 2, 2, 1)
%assign tlcOutputsFcnOfS3B2 = OpaqueTLCBlockFcn("Outputs", 3, 2, 2, 2, 2)
%assign tlcOutputsFcnOfS3B3 = OpaqueTLCBlockFcn("Outputs", 3, 3, 2, 2, 3)
%<SLibGenerateExtModeOutput(system)>
/* Reset subsysRan breadcrumbs */
srClearBC(flume_simulink_daq_control_DW.IfActionSubsystem1.IfActionSubsystem1_SubsysRanBC);
/* Reset subsysRan breadcrumbs */
srClearBC(flume_simulink_daq_control_DW.IfActionSubsystem.IfActionSubsystem_SubsysRanBC);
/* Reset subsysRan breadcrumbs */
srClearBC(flume_simulink_daq_control_DW.data_recording_SubsysRanBC);
%if !WHITE_SPACE(tlcOutputsFcnOfS4B0)
/* {S!d34}S-Function (sldrtai): '<Root>/Analog Input' */
%<tlcOutputsFcnOfS4B0>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS4B1)
/* {S!d36}S-Function (sldrtci): '<Root>/Counter Input' */
%<tlcOutputsFcnOfS4B1>\
%endif
/* {S!d38}Logic: '<Root>/Logical Operator' incorporates:
 *  Constant: '<Root>/Constant'
 *  Constant: '<S1>/Constant'
 *  Constant: '<S2>/Constant'
 *  Delay: '<Root>/Delay'
 *  RelationalOperator: '<S1>/Compare'
 *  RelationalOperator: '<S2>/Compare'
 */
flume_simulink_daq_control_B.LogicalOperator = (((int32_T)flume_simulink_daq_control_DW.Delay_DSTATE <= (int32_T)flume_simulink_daq_control_P.Constant_Value_g) && (flume_simulink_daq_control_P.Constant_Value_n > flume_simulink_daq_control_P.Constant_Value));
/* {S!d40}If: '<S5>/If' */
if (rtb_CounterInput[1] > 1.0E+6) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",0)
    /* {S!d23}Outputs for IfAction SubSystem: '<S5>/If Action Subsystem1' incorporates:
 *  ActionPort: '<S10>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem1",0,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem1",0,1)
%<SLibCGIRAccessLocalVar(0, 0, "")> %% rtb_CounterInput
%endif

%<SLibCGIRGenReusableSysCall("flume_simulink_daq_control_IfActionSubsystem1", ["%<_modelSS>", "rtb_CounterInput[1]", "&rtb_datapoints", "&flume_simulink_daq_control_P.IfActionSubsystem1_j"], 0, 1, 6, 0, 6, 4)>;

    /* {E!d23}End of Outputs for SubSystem: '<S5>/If Action Subsystem1' */
%endif
} else {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Output",0)
    /* {S!d25}Outputs for IfAction SubSystem: '<S5>/If Action Subsystem' incorporates:
 *  ActionPort: '<S9>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem",1,1)
%<SLibCGIRAccessLocalVar(0, 0, "")> %% rtb_CounterInput
%endif

%<SLibCGIRGenReusableSysCall("flume_simulink_daq_control_IfActionSubsystem", ["%<_modelSS>", "rtb_CounterInput[1]", "&rtb_datapoints"], 1, 1, 6, 0, 6, 4)>;

    /* {E!d25}End of Outputs for SubSystem: '<S5>/If Action Subsystem' */
%endif
}
/* {E!d40}End of If: '<S5>/If' */

/* {S!d42}Gain: '<S3>/Gain' incorporates:
 *  Gain: '<Root>/encoder_calib_pitch [rad//cnt]'
 */
flume_simulink_daq_control_B.Gain = flume_simulink_daq_control_P.encoder_calib_pitchradcnt_Gain * rtb_datapoints * flume_simulink_daq_control_P.Gain_Gain;
/* {S!d44}Sum: '<Root>/Sum' incorporates:
 *  Constant: '<Root>/offset [deg]'
 *  Constant: '<Root>/servopostion [deg]'
 *  Constant: '<Root>/zero_bias [deg]'
 */
rtb_datapoints = (flume_simulink_daq_control_P.offsetdeg_Value + flume_simulink_daq_control_P.servopostiondeg_Value) + flume_simulink_daq_control_P.zero_biasdeg_Value;
/* {S!d52}Saturate: '<Root>/Saturation' */
if (rtb_datapoints > flume_simulink_daq_control_P.Saturation_UpperSat) {
    /* {S!d46}Saturate: '<Root>/Saturation' */
    flume_simulink_daq_control_B.finservocommanddeg = flume_simulink_daq_control_P.Saturation_UpperSat;
} else if (rtb_datapoints < flume_simulink_daq_control_P.Saturation_LowerSat) {
    /* {S!d48}Saturate: '<Root>/Saturation' */
    flume_simulink_daq_control_B.finservocommanddeg = flume_simulink_daq_control_P.Saturation_LowerSat;
} else {
    /* {S!d50}Saturate: '<Root>/Saturation' */
    flume_simulink_daq_control_B.finservocommanddeg = rtb_datapoints;
}
/* {E!d52}End of Saturate: '<Root>/Saturation' */

/* {S!d54}If: '<S4>/If' */
if (rtb_CounterInput[0] > 1.0E+6) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",0)
    /* {S!d27}Outputs for IfAction SubSystem: '<S4>/If Action Subsystem1' incorporates:
 *  ActionPort: '<S8>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem1",0,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem1",0,1)
%<SLibCGIRAccessLocalVar(0, 0, "")> %% rtb_CounterInput
%endif

%<SLibCGIRGenReusableSysCall("flume_simulink_daq_control_IfActionSubsystem1", ["%<_modelSS>", "rtb_CounterInput[0]", "&rtb_datapoints", "&flume_simulink_daq_control_P.IfActionSubsystem1"], 0, 0, 6, 0, 6, 4)>;

    /* {E!d27}End of Outputs for SubSystem: '<S4>/If Action Subsystem1' */
%endif
} else {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Output",0)
    /* {S!d29}Outputs for IfAction SubSystem: '<S4>/If Action Subsystem' incorporates:
 *  ActionPort: '<S7>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif
%if SLibCG_SystemFcnArgAccessed("flume_simulink_daq_control_IfActionSubsystem",1,1)
%<SLibCGIRAccessLocalVar(0, 0, "")> %% rtb_CounterInput
%endif

%<SLibCGIRGenReusableSysCall("flume_simulink_daq_control_IfActionSubsystem", ["%<_modelSS>", "rtb_CounterInput[0]", "&rtb_datapoints"], 1, 0, 6, 0, 6, 4)>;

    /* {E!d29}End of Outputs for SubSystem: '<S4>/If Action Subsystem' */
%endif
}
/* {E!d54}End of If: '<S4>/If' */
for (i = 0; i < 6; i++) {
    /* {S!d56}Gain: '<Root>/wallace_calib_trans' */
    flume_simulink_daq_control_B.FT[i] = 0.0;
    for (i_0 = 0; i_0 < 6; i_0++) {
        flume_simulink_daq_control_B.FT[i] += flume_simulink_daq_control_P.wallace_calib_trans_Gain[6 * i + i_0] * rtb_AnalogInput[i_0];
    }
    /* {E!d56}End of Gain: '<Root>/wallace_calib_trans' */
}
/* {S!d58}Gain: '<Root>/poten_calib' incorporates:
 *  Constant: '<Root>/poten_Vcc'
 *  Product: '<Root>/Divide'
 */
flume_simulink_daq_control_B.finservofeedbackdeg = rtb_AnalogInput[6] / flume_simulink_daq_control_P.poten_Vcc_Value * flume_simulink_daq_control_P.poten_calib_Gain;
/* {S!d60}Gain: '<Root>/encoder_calib_heave [m//cnt]' */
flume_simulink_daq_control_B.heavefeedbackm = flume_simulink_daq_control_P.encoder_calib_heavemcnt_Gain * rtb_datapoints;
/* {S!d31}Outputs for Enabled SubSystem: '<Root>/data_recording' incorporates:
 *  EnablePort: '<S6>/Enable'
 */
if (flume_simulink_daq_control_B.LogicalOperator) {
    uint16_T rtb_FixPtSum1;
    /* {S!d62}Sum: '<S12>/FixPt Sum1' incorporates:
 *  Constant: '<S12>/FixPt Constant'
 *  UnitDelay: '<S11>/Output'
 */
    rtb_FixPtSum1 = (uint16_T)(flume_simulink_daq_control_DW.Output_DSTATE + flume_simulink_daq_control_P.FixPtConstant_Value);
    /* {S!d68}Switch: '<S13>/FixPt Switch' */
    if (rtb_FixPtSum1 > flume_simulink_daq_control_P.WrapToZero_Threshold) {
        /* {S!d64}Switch: '<S13>/FixPt Switch' incorporates:
 *  Constant: '<S13>/Constant'
 */
        flume_simulink_daq_control_B.FixPtSwitch = flume_simulink_daq_control_P.Constant_Value_i;
    } else {
        /* {S!d66}Switch: '<S13>/FixPt Switch' */
        flume_simulink_daq_control_B.FixPtSwitch = rtb_FixPtSum1;
    }
    /* {E!d68}End of Switch: '<S13>/FixPt Switch' */

    /* {S!d70}RelationalOperator: '<S6>/Relational Operator' incorporates:
 *  Constant: '<Root>/duration [sec]'
 *  Constant: '<Root>/samplingrate [Hz]'
 *  Product: '<S6>/datapoints'
 *  UnitDelay: '<S11>/Output'
 */
    flume_simulink_daq_control_B.RelationalOperator = (flume_simulink_daq_control_DW.Output_DSTATE >= flume_simulink_daq_control_P.durationsec_Value * flume_simulink_daq_control_P.samplingrateHz_Value);
    for (i = 0; i < 6; i++) {
        /* {S!d72}SignalConversion generated from: '<S6>/To File' */
        flume_simulink_daq_control_B.TmpSignalConversionAtToFileInport1[i] = flume_simulink_daq_control_B.FT[i];
    }
    /* {S!d74}SignalConversion generated from: '<S6>/To File' */
    flume_simulink_daq_control_B.TmpSignalConversionAtToFileInport1[6] = flume_simulink_daq_control_B.finservofeedbackdeg;
    flume_simulink_daq_control_B.TmpSignalConversionAtToFileInport1[7] = flume_simulink_daq_control_B.finservocommanddeg;
    flume_simulink_daq_control_B.TmpSignalConversionAtToFileInport1[8] = flume_simulink_daq_control_B.heavefeedbackm;
    flume_simulink_daq_control_B.TmpSignalConversionAtToFileInport1[9] = flume_simulink_daq_control_B.Gain;
    flume_simulink_daq_control_B.TmpSignalConversionAtToFileInport1[10] = %<(SLibCG_SE(SLibCG_Grnd(0, 0, 1, "", -1, "", 0)))>;
    flume_simulink_daq_control_B.TmpSignalConversionAtToFileInport1[11] = %<(SLibCG_SE(SLibCG_Grnd(0, 0, 1, "", -1, "", 0)))>;
%if !WHITE_SPACE(tlcOutputsFcnOfS3B2)
    /* {S!d76}ToFile: '<S6>/To File' */
%<tlcOutputsFcnOfS3B2>\
%endif
%if !WHITE_SPACE(tlcOutputsFcnOfS3B3)
    /* {S!d78}ToWorkspace: '<S6>/To Workspace' */
%<tlcOutputsFcnOfS3B3>\
%endif
    srUpdateBC(flume_simulink_daq_control_DW.data_recording_SubsysRanBC);
}
/* {E!d31}End of Outputs for SubSystem: '<Root>/data_recording' */
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(2, 2, fcnProtoType)>
%endfunction
